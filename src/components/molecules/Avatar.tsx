/* eslint-disable react-hooks/exhaustive-deps */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/avatar.glb 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

const animationOpt = {
  fail: "fail",
  tPose: "t-pose",
  text: "text",
  idle: "idle",
};

export default function Model(props: any) {
  const group = useRef();
  const { formState } = props;
  const { nodes, materials, animations } = useGLTF("/models/avatar.glb") as any;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions[animationOpt.idle]?.reset().fadeIn(0.5).play();
  }, []);

  useEffect(() => {
    actions[formState]?.reset().fadeIn(0.5).play();

    return () => {
      actions[formState]?.fadeOut(0.5);
    };
  }, [formState]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="avatar"
          position={[-0.002, -0.667, -0.041]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
        >
          <primitive object={nodes.mixamorig6Hips} />
        </group>
        <skinnedMesh
          name="Ch09"
          geometry={nodes.Ch09.geometry}
          material={materials.Ch09_body}
          skeleton={nodes.Ch09.skeleton}
          position={[-0.002, -0.667, -0.041]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.01}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/avatar.glb");
